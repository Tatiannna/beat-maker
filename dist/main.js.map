{"version":3,"file":"main.js","mappings":"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","sources":["webpack://beat-maker/./src/scripts/beat.js","webpack://beat-maker/./src/scripts/sound.js","webpack://beat-maker/./src/scripts/controls.js","webpack://beat-maker/./src/scripts/track.js","webpack://beat-maker/./src/index.js"],"sourcesContent":["import Track from \"./track.js\";\n\n\nclass Beat {\n\n    static tracks = [];\n    static tempo = 1400;\n\n    constructor(container, nav ){\n\n        this.volume = 1000;\n\n        for(let i = 0; i < 8; i++){\n            Beat.tracks.push(new Track(container));\n        }\n        this.addNavControls(nav);\n    }\n\n    addNavControls(nav){\n        const navRight = document.getElementById('nav-left');\n        const newTrackButton = document.createElement('button');\n        newTrackButton.textContent = 'Track +';\n        navRight.appendChild(newTrackButton);\n\n        const play = document.createElement('button');\n        play.textContent = \"Play\";\n        navRight.appendChild(play);\n\n        const tempoPlus = document.createElement('button');\n        tempoPlus.textContent = \"Tempo +\";\n        navRight.appendChild(tempoPlus);\n\n        const tempoMinus = document.createElement('button');\n        tempoMinus.textContent = \"Tempo -\";\n        navRight.appendChild(tempoMinus);\n\n        const volumeMinus = document.createElement('button');\n        volumeMinus.textContent = \"Volume -\";\n        navRight.appendChild(volumeMinus);\n\n        const volumePlus = document.createElement('button');\n        volumePlus.textContent = \"Volume+\";\n        navRight.appendChild(volumePlus);\n\n        const stop = document.createElement('button');\n        stop.textContent = \"Stop\";\n        navRight.appendChild(stop);\n\n\n        newTrackButton.addEventListener(\"click\", (e) =>{\n            this.addTrack(container);\n        });\n        \n        play.addEventListener( \"click\", (e) =>{\n            this.playAllTracks();\n        });\n        \n        tempoMinus.addEventListener( \"click\", (e) =>{\n            this.changeTempo(-50);\n        });\n        \n        tempoPlus.addEventListener( \"click\", (e) =>{\n            this.changeTempo(50);\n        });\n\n        volumeMinus.addEventListener( \"click\", (e) =>{\n            this.changeVolume(-50);\n        });\n\n        volumePlus.addEventListener( \"click\", (e) =>{\n            this.changeVolume(50);\n        });\n\n        stop.addEventListener(\"click\", (e) =>{\n            this.stopAllTracks();\n        });\n    }\n\n\n\n    addTrack(container){\n        const track = new Track(container);\n        Beat.tracks.push(track);\n        // console.log(\"All tracks:\" ,tracks)\n    }\n\n\n    playAllTracks(){\n        const playFunctions = [];\n\n        if (Beat.tracks.length > 0){\n            Beat.tracks.forEach( (track) => {\n                playFunctions.push(new Promise(track.playTrack.bind(track)));\n            })\n            console.log(playFunctions);\n\n            Promise.all(playFunctions).catch(() => console.log(\"Something went wrong!\"));\n        }else{\n            console.log(\"No tracks to play!\");\n        }\n            \n    }\n\n    stopAllTracks(){\n        const stopFunctions = [];\n\n        const stopTrack = function(){\n            Beat.tracks.forEach( (track) => {\n                track.stopped = true;\n            });\n        }\n\n        if (Beat.tracks.length > 0){\n            Beat.tracks.forEach( (track) => {\n                stopFunctions.push(new Promise(stopTrack.bind(track)));\n            })\n            console.log(stopFunctions);\n\n            Promise.all(stopFunctions).catch(() => console.log(\"Something went wrong!\"));\n        }else{\n            console.log(\"No tracks playing!\");\n        }\n    }\n\n    changeTempo(diff){\n        Beat.tempo += diff;\n        console.log(this.tempo);\n    }\n\n    changeVolume(diff){\n        this.volume += diff;\n        console.log(this.volume);\n    }\n}\n\n\nexport default Beat;","import Beat from \"./beat\";\n\nclass Sound {\n    static allContexts = [];\n\n    static packs = [\n        {name: \"Claps\", count: 7}, \n        {name: \"Blast Block\", count: 9}, \n        {name: \"Egg Shaker\", count: 11}, \n        {name: \"Mid Tom\", count: 10}\n    ];\n\n    constructor(packName, num){\n        this.audio = new Audio();\n        //this.setSound(packName = 'Blast Block', num = 7);\n        //this.audio.crossOrigin = 'anonymous'; // CORS access restrictions\n        //this.audio.src = './assets/Claps/0.wav';\n        this.audio.loop = false;\n        this.isAnimating = false;\n        this.audioSourceSet = false;\n\n        //console.log(this.audio);\n        //this.audio.play();\n    }\n\n    src(packName, num){\n        let srcPath = './assets/';\n\n        srcPath += `${packName}/${num}.wav`;\n        return srcPath;\n    }\n\n    setSound(packName, num){\n        this.audio = new Audio(this.src(packName, num));\n        this.createContext();\n    }\n\n    createContext(){\n        console.log(\"All sound contexts:\", Sound.allContexts);\n\n        const isNotThisSource = (context) => {\n            return context.src != this.audio.src;\n        }\n\n        if (Sound.allContexts.every(isNotThisSource)){\n            console.log(\"creating context for\", this.audio.src)\n            let trackContext =  new AudioContext();\n            let src = trackContext.createMediaElementSource(this.audio);\n            let analyser = trackContext.createAnalyser();\n            src.connect(analyser);\n            analyser.connect(trackContext.destination);\n            analyser.fftsize = 512;\n\n            let bufferLength = analyser.frequencyBinCount;\n            let freqData = new Uint8Array(bufferLength);\n\n            Sound.allContexts.push({src: this.audio.src, freqData: freqData, analyser: analyser});\n        }\n       \n    }\n    playSound(){\n        const canvas = document.getElementById('canvas');\n        const ctx = canvas.getContext('2d');\n        \n        let barHeight;\n        let x;\n\n        const barWidth = canvas.width/20; // 1 bar\n\n\n        console.log(this.audio.play());\n\n        const animate = function(){\n            const allFreqData = [];\n            const agg = [];\n\n            ctx.clearRect(0,0, canvas.width, canvas.height);\n\n            requestAnimationFrame(animate);\n\n            let freqData;\n            Sound.allContexts.forEach((audioContextObj) => {\n                freqData = audioContextObj.freqData;\n                audioContextObj.analyser.getByteFrequencyData(freqData); // populate with data\n                allFreqData.push(freqData);\n            })\n\n\n            if (Sound.allContexts.length >0){\n                for (let i = 0; i < allFreqData[0].length; i++){\n                    agg.push(0);\n                    allFreqData.forEach((data) => {\n                        agg[i] += data[i];\n                    });\n                }\n            }\n\n            x = 0;\n            //analyser.getByteFrequencyData(dataArray);\n            for(let i = 0; i < 40; i++){\n                // barHeight = dataArray[i];\n                //barHeight = freqData[i];\n                barHeight = agg[i];\n                // ctx.fillStyle = 'grey';\n                ctx.fillStyle = \"rgb(243, 252, 74)\";\n                ctx.fillRect(x, canvas.height - barHeight, barWidth, barHeight);\n                x += barWidth;\n            }\n            console.log(\"Visualizer Running!\");\n        }\n        animate();\n    }\n\n    visualizeSound(){}\n\n    random(){\n\n    }\n}\n\nexport default Sound;","import Track from \"./track.js\";\nimport Sound from \"./sound.js\";\nimport Beat from \"./beat.js\";\n\nclass Controls {\n\n    constructor(track){\n        this.track = track; //TRACK OBJECT, NOT DIV\n        this.addControls();\n    }\n\n    addControls(){\n        // console.log(\"Calling addControls(). Value of track: \", this.track);\n\n\n        // create Left track div\n        const trackLeft = document.createElement('div');\n        trackLeft.classList.add(\"track-div-left\");\n        this.track.trackDiv.appendChild(trackLeft);\n\n        // Add controls to left track div\n        let remove = document.createElement('button');\n        remove.textContent = 'Remove';\n        trackLeft.appendChild(remove);\n\n\n        let stop = document.createElement('button');\n        stop.textContent = 'Stop';\n        trackLeft.appendChild(stop);\n\n        // 'Remove' button listener\n        this.addControlListeners(remove);\n\n        // Test Sound Button\n        const testButton = document.createElement('button');\n        testButton.textContent = 'Test';\n        trackLeft.appendChild(testButton);\n\n        testButton.addEventListener(\"click\", (e) =>{\n            // const audioElement = new Audio();\n            // audioElement.play();\n            this.track.sound.playSound();\n        });\n\n        // Add Track Play button\n        const playButton = document.createElement(\"button\");\n        playButton.textContent = \"Play\";\n        trackLeft.appendChild(playButton);\n\n        playButton.addEventListener(\"click\", (e)=> {\n            this.track.playTrack();\n        });\n\n\n        // Sound PACK selection dropdown menu\n        let soundTypeMenu = document.createElement('select');\n        let option = document.createElement(\"option\");\n        option.textContent = \"Select Sound Pack\";\n        option.setAttribute('selected', true);\n        option.setAttribute('disabled', true);\n        soundTypeMenu.appendChild(option);\n\n\n        // Populate pack options\n        for(let i = 0; i < Sound.packs.length; i++){\n            let option = document.createElement(\"option\");\n            option.textContent = Sound.packs[i].name;\n            option.value = Sound.packs[i].name;\n            soundTypeMenu.appendChild(option);\n        } \n        trackLeft.appendChild(soundTypeMenu);\n\n        // Sound selection dropdown menu\n        let soundMenu = document.createElement('select');\n        option = document.createElement(\"option\");\n        option.textContent = \"Select Sound\";\n        option.setAttribute('selected', true);\n        option.setAttribute('disabled', true);\n        soundMenu.appendChild(option);\n        trackLeft.appendChild(soundMenu);\n\n\n        // listener for pack selection\n        let selectedPack = null;\n        soundTypeMenu.addEventListener(\"change\", (e)=>{\n            selectedPack = e.srcElement.value;\n            console.log(selectedPack);\n\n            let numSounds;\n            let packIndex;\n            for(let i = 0; i < Sound.packs.length; i++){\n                if (selectedPack === Sound.packs[i].name){\n                    packIndex = i;\n                    numSounds = Sound.packs[i].count;\n                }\n            }\n\n            // List available sounds based on Pack selection\n            soundMenu.replaceChildren();\n            option = document.createElement(\"option\");\n            option.textContent = \"Select Sound\";\n            option.setAttribute('selected', true);\n            option.setAttribute('disabled', true);\n            soundMenu.appendChild(option);\n            for(let i = 0; i < numSounds; i++){\n                let option = document.createElement(\"option\");\n                option.textContent = `${Sound.packs[packIndex].name} ${i}`;\n                option.value = `${i}`;\n                soundMenu.appendChild(option);\n            }\n        });\n\n        stop.addEventListener( 'click', (e) => {\n            this.track.stopped = true;\n        });\n\n        //Assign track based on sound selection\n        let selectedSound = null;\n        soundMenu.addEventListener(\"change\", (e) => {\n            selectedSound = e.srcElement.value;\n            console.log(selectedSound);\n            this.track.sound.setSound(selectedPack, selectedSound);\n            this.track.sound.playSound();\n        });\n\n    }\n\n    addControlListeners(remove){\n        // listener for mute\n        // listener for track remove\n        // listener for volume\n\n        remove.addEventListener(\"click\", (e) => {\n            let idx = Beat.tracks.indexOf(this.track);\n            console.log(\"index to remove: \", idx);\n            Beat.tracks.splice(idx, 1);\n            this.track.trackDiv.remove();\n            //this.track = undefined;\n        });\n    }\n}\n\nexport default Controls;","import Controls from \"./controls.js\";\nimport Sound from \"./sound.js\";\nimport Beat from \"./beat.js\";\n\n\n\nclass Track {\n\n    constructor(container){\n        this.segments = [];\n        this.trackDiv = null;\n        this.sound = new Sound();\n        this.buildTrack(container);\n        this.stopped = false;\n        this.loop = true;\n    }\n\n    buildTrack(container){\n\n        //Track container\n        this.trackDiv = document.createElement('div');\n        this.trackDiv.classList.add(\"track\");\n        container.appendChild(this.trackDiv);\n\n        // ADD CONTROLS HERE\n        let controls = new Controls(this);\n\n\n        //Right track div\n        const trackRight = document.createElement('div');\n        trackRight.classList.add(\"track-div-right\")\n        this.trackDiv.appendChild(trackRight);\n\n        //Add segments to right track div\n        let trackUL = document.createElement('ul');\n        for (let i = 0; i < 8; i++){\n            let segment = document.createElement('li');\n            segment.classList.add(\"segment\");\n            segment.classList.add(\"off\");\n            segment.dataset.pos = `${i}`;\n            this.segments.push(segment);\n            trackUL.appendChild(segment);\n        }\n        trackRight.appendChild(trackUL);\n        this.addSegmentListner(trackUL);\n    }\n\n\n    addSegmentListner(trackUL){\n        trackUL.addEventListener(\"click\", (e) =>{\n            if (e.srcElement.classList[0] == \"segment\"){\n                if (e.srcElement.classList[1] === \"off\"){\n                    e.target.classList.remove(\"off\");\n                    e.target.classList.add(\"on\");\n                }else{\n                    e.target.classList.remove(\"on\");\n                    e.target.classList.add(\"off\");\n                }\n            }\n        });\n    }\n\n    addSegmentListner(trackUL){\n        trackUL.addEventListener(\"click\", (e) =>{\n            if (e.srcElement.classList[0] == \"segment\"){\n                if (e.srcElement.classList[1] === \"off\"){\n                    e.target.classList.remove(\"off\");\n                    e.target.classList.add(\"on\");\n                }else{\n                    e.target.classList.remove(\"on\");\n                    e.target.classList.add(\"off\");\n                }\n            }\n        });\n    }\n\n\n    playTrack(){\n        let count = 0;\n        const second = 1000;\n        let delay = 2 * second - Beat.tempo;\n\n        function removePlayingClass(segment){\n            segment.classList.remove(\"playing\");\n        }\n\n        function playSegment(){\n\n            if ((count === 8  && this.loop === false) || this.stopped === true){\n                clearInterval(countInterval);\n                this.stopped = false;\n                return;\n            }else{\n                this.segments[count].classList.add(\"playing\");\n                if (this.segments[count].classList[1] === \"on\"){\n                    this.sound.playSound();\n                    console.log(`Playing sound for segment ${count+1}`);\n                }else{\n                    console.log(`NO SOUND for segment ${count+1}`);\n                }\n            }\n            setTimeout(removePlayingClass.bind(this, this.segments[count]), delay);\n            \n            console.log(\"After playing: \", this.segments[count].classList);\n            count += 1;\n\n            if (count === 8 && this.loop === true){\n                count = 0;\n            }\n        }\n        const countInterval = setInterval(playSegment.bind(this), delay);\n    }\n    // randomize (add \"on\" class to random segments)\n}\n\n\nexport default Track;","import Track from \"./scripts/track.js\";\nimport Beat from \"./scripts/beat.js\";\n\n\nconst container = document.getElementById(\"container\");\nconst navBar = document.getElementById(\"nav\");\n\n\n\n\n\n\nconst beat = new Beat(container, nav);\n"],"names":["Beat","static","constructor","container","nav","this","volume","i","tracks","push","Track","addNavControls","navRight","document","getElementById","newTrackButton","createElement","textContent","appendChild","play","tempoPlus","tempoMinus","volumeMinus","volumePlus","stop","addEventListener","e","addTrack","playAllTracks","changeTempo","changeVolume","stopAllTracks","track","playFunctions","length","forEach","Promise","playTrack","bind","console","log","all","catch","stopFunctions","stopTrack","stopped","diff","tempo","Sound","name","count","packName","num","audio","Audio","loop","isAnimating","audioSourceSet","src","srcPath","setSound","createContext","allContexts","every","context","trackContext","AudioContext","createMediaElementSource","analyser","createAnalyser","connect","destination","fftsize","bufferLength","frequencyBinCount","freqData","Uint8Array","playSound","canvas","ctx","getContext","barHeight","x","barWidth","width","animate","allFreqData","agg","clearRect","height","requestAnimationFrame","audioContextObj","getByteFrequencyData","data","fillStyle","fillRect","visualizeSound","random","addControls","trackLeft","classList","add","trackDiv","remove","addControlListeners","testButton","sound","playButton","soundTypeMenu","option","setAttribute","packs","value","soundMenu","selectedPack","numSounds","packIndex","srcElement","replaceChildren","selectedSound","idx","indexOf","splice","segments","buildTrack","Controls","trackRight","trackUL","segment","dataset","pos","addSegmentListner","target","delay","removePlayingClass","countInterval","setInterval","clearInterval","setTimeout"],"sourceRoot":""}