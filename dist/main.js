/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("\n\nconst container = document.getElementById(\"container\");\nconst navBar = document.getElementById(\"nav\");\n\nconst newTrackButton = document.createElement('button');\nnewTrackButton.textContent = 'Add Track';\nnav.appendChild(newTrackButton);\n\n\n//Track container\nconst track = document.createElement('div');\ntrack.classList.add(\"track\");\ncontainer.appendChild(track);\n\n\n// create Left track div\nconst trackLeft = document.createElement('div');\ntrackLeft.classList.add(\"track-div-left\");\ntrack.appendChild(trackLeft);\n\n\n// Add controls to left track div\nlet remove = document.createElement('button');\nremove.textContent = 'Remove';\nlet mute = document.createElement('button');\nmute.textContent = 'Mute';\ntrackLeft.appendChild(remove);\ntrackLeft.appendChild(mute);\n\nremove.addEventListener(\"click\", (e) => {\n    track.remove()\n});\n\n// Sound selection dropdown menu\nlet soundMenu = document.createElement('select');\nlet option = document.createElement(\"option\");\noption.textContent = \"Select Sound\";\noption.setAttribute('selected', true);\noption.setAttribute('disabled', true);\nsoundMenu.appendChild(option);\n\nfor(let i = 0; i < 5; i++){\n    let option = document.createElement(\"option\");\n    option.textContent = \"option\";\n    soundMenu.appendChild(option);\n}\n    \ntrackLeft.appendChild(soundMenu);\n\n\n\n\n//Right track div\nconst trackRight = document.createElement('div');\ntrackRight.classList.add(\"track-div-right\")\ntrack.appendChild(trackRight);\n\n\n//Add segments to right track div\nlet trackUL = document.createElement('ul');\nfor (let i = 0; i < 8; i++){\n    let segment = document.createElement('li');\n    segment.classList.add(\"segment\");\n    segment.classList.add(\"off\");\n    segment.dataset.pos = `${i}`;\n    trackUL.appendChild(segment);\n}\n\ntrackRight.appendChild(trackUL);\n\n\n// toggle segments class on/ off from click\nlet segmentState = false;\ntrackUL.addEventListener(\"click\", (e) =>{\n\n    e.stopPropagation();\n\n    console.log(\"segment clicked!\")\n    // toggle class on/off\n    if (segmentState === false){\n        e.target.classList.remove(\"off\")\n        e.target.classList.add(\"on\")\n        segmentState = true;\n    }else{\n        e.target.classList.remove(\"on\")\n        e.target.classList.add(\"off\")\n        segmentState = false;\n    }\n});\n\n\nnewTrackButton.addEventListener(\"click\", (e) =>{\n    // //Create Track\n    // let trackUL = document.createElement('ul');\n    // //trackUL.classList.add(\"track\");\n\n    \n    // //Add controls\n    // let remove = document.createElement('button');\n    // remove.textContent = 'Remove';\n    // let mute = document.createElement('button');\n    // mute.textContent = 'Mute';\n    // track.appendChild(remove);\n    // track.appendChild(mute);\n\n    // //Add segments\n    // for (let i = 0; i < 8; i++){\n    //     let segment = document.createElement('li');\n    //     segment.classList.add(\"segment\");\n    //     segment.classList.add(\"off\");\n    //     segment.dataset.pos = `${i}`;\n    //     track.appendChild(segment);\n    // }\n    // container.appendChild(track);\n\n\n    // //Add listener to track (for segments)\n    // let segmentState = false;\n\n    // trackUL.addEventListener(\"click\", (e) =>{\n\n    //     console.log(\"segment clicked!\")\n    //     // toggle class on/off\n    //     if (segmentState === false){\n    //         e.target.classList.remove(\"off\");\n    //         e.target.classList.add(\"on\");\n    //         segmentState = true;\n    //     }else{\n    //         e.target.classList.remove(\"on\");\n    //         e.target.classList.add(\"off\");\n    //         segmentState = false;\n    //     }\n    // });\n\n\n\n    //Track container\n    const track = document.createElement('div');\n    track.classList.add(\"track\");\n    container.appendChild(track);\n\n\n    // create Left track div\n    const trackLeft = document.createElement('div');\n    trackLeft.classList.add(\"track-div-left\");\n    track.appendChild(trackLeft);\n\n    // Add controls to left track div\n        let remove = document.createElement('button');\n        remove.textContent = 'Remove';\n        let mute = document.createElement('button');\n        mute.textContent = 'Mute';\n        trackLeft.appendChild(remove);\n        trackLeft.appendChild(mute);\n    \n    remove.addEventListener(\"click\", (e) => {\n        track.remove()\n    });\n\n\n    //Right track div\n    const trackRight = document.createElement('div');\n    trackRight.classList.add(\"track-div-right\")\n    track.appendChild(trackRight);\n\n\n    //Add segments to right track div\n    let trackUL = document.createElement('ul');\n    for (let i = 0; i < 8; i++){\n        let segment = document.createElement('li');\n        segment.classList.add(\"segment\");\n        segment.classList.add(\"off\");\n        segment.dataset.pos = `${i}`;\n        trackUL.appendChild(segment);\n    }\n\n    trackRight.appendChild(trackUL);\n    // console.log(trackUL.parentElement);\n\n\n    // toggle segments class on/ off from click\n\n    let segmentState = false;\n    trackUL.addEventListener(\"click\", (e) =>{\n\n        e.stopPropagation();\n        \n        console.log(\"segment clicked!\");\n        console.log(e.classList);\n\n        if (e.classList.contains(\"off\")){\n            e.target.classList.remove(\"off\");\n            e.target.classList.add(\"on\");\n        }else{\n            e.target.classList.remove(\"pn\");\n            e.target.classList.add(\"off\");\n        }\n    \n\n        // toggle class on/off\n        // if (segmentState === false){\n        //     e.target.classList.remove(\"off\")\n        //     e.target.classList.add(\"on\")\n        //     segmentState = true;\n        // }else{\n        //     e.target.classList.remove(\"on\")\n        //     e.target.classList.add(\"off\")\n        //     segmentState = false;\n        // }\n\n        // if e.classList.includes(\"on\"){\n\n        // }\n\n    });\n});\n\n\n\n\n\n//# sourceURL=webpack://beat-maker/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;